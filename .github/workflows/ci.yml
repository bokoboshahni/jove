name: CI
on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
  release:
    types: [published]

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    if: github.event_name != 'release'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true

      - name: Install gems
        run: |
          bundle config path vendor/bundle
          bundle install --jobs 4 --retry 3

      - name: Run linters
        run: |
          bin/rubocop -P
          bin/erblint --lint-all

  security:
    name: Security
    runs-on: ubuntu-latest
    if: github.event_name != 'release'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true

      - name: Run brakeman
        run: |
          bundle exec brakeman -q -w2

      - name: Run bundle-audit
        run: |
          bundle exec bundle-audit check --update

  test:
    name: Test
    runs-on: ubuntu-latest
    if: github.event_name != 'release'
    services:
      postgres:
        image: postgres:14-alpine
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports: ["5432:5432"]
        options: >-
          --health-cmd pg_isready
          --health-interval 10ms
          --health-timeout 500ms
          --health-retries 15
      redis:
        image: redis:7-alpine
        ports: ["6379:6379"]
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10ms
          --health-timeout 500ms
          --health-retries 15

    steps:
      - uses: browser-actions/setup-chrome@latest

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true

      - name: Run tests
        uses: paambaati/codeclimate-action@v3.0.0
        env:
          JOVE_ESI_CLIENT_ID: 'dummy'
          JOVE_ESI_CLIENT_SECRET: 'dummy'
          CC_TEST_REPORTER_ID: ${{ secrets.CC_TEST_REPORTER_ID }}
          DATABASE_URL: postgres://postgres:postgres@localhost:5432/jove
          RAILS_ENV: test
        with:
          coverageCommand: bin/ci-test
